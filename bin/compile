#!/bin/bash
# Usage: bin/compile <build-dir> <cache-dir>

set -e
set -o pipefail

# START CONFIG
NGINX_VERSION=1.3.11
PHP_VERSION=5.4.1-with-fpm-mcrypt
WORDPRESS_VERSION=3.5.1
S3_BUCKET=heroku-buildpack-syi
# END CONFIG

#
NGINX_URL="https://s3.amazonaws.com/${S3_BUCKET}/nginx-${NGINX_VERSION}-heroku.tar.gz"
PHP_URL="https://s3.amazonaws.com/${S3_BUCKET}/php-${PHP_VERSION}-heroku.tar.gz"
NGINX_FILE="nginx-${NGINX_VERSION}-heroku.tar.gz"
PHP_FILE="php-${PHP_VERSION}-heroku.tar.gz"

function indent() {
  c='s/^/       /'
  case $(uname) in
    Darwin) sed -l "$c";;
    *)      sed -u "$c";;
  esac
}

BUILD_DIR=$1
CACHE_DIR=$2
mkdir -p $BUILD_DIR $CACHE_DIR

cd ${BUILD_DIR}
mkdir ../public
mv * -t ../public
mv ../public ./public
mv public/heroku-config ./config


#Download items into cache directory, ignoring if they are already downloaded.
cd ${CACHE_DIR}
if [ ! -f $NGINX_FILE ]; then
  echo "-----> Downloading Nginx v${NGINX_VERSION}"
  curl --silent --max-time 60 --location $NGINX_URL -o $NGINX_FILE
fi

if [ ! -f $PHP_FILE ]; then
  echo "-----> Downloading PHP v${PHP_VERSION}"
  curl --silent --max-time 60 --location $PHP_URL -o $PHP_FILE
fi

#!/usr/bin/env bash
curl https://s3.amazonaws.com/heroku-jvm-buildpack-vi/vim-7.3.tar.gz --output vim.tar.gz
mkdir vim && tar xzf vim.tar.gz -C vim
export PATH=$PATH:/app/vim/bin

# Nginx install
cd ${BUILD_DIR}
if [ ! -d ./vendor/nginx ]; then
  echo "-----> Installing Nginx v${NGINX_VERSION}"
  mkdir -p ./vendor/nginx && cd ./vendor/nginx
  tar xzf ${CACHE_DIR}/${NGINX_FILE}
fi

# PHP
cd ${BUILD_DIR}
if [ ! -d ./vendor/php ]; then
  echo "-----> Installing PHP v${PHP_VERSION}"
  mkdir -p ./vendor/php && cd ./vendor/php
  tar xzf ${CACHE_DIR}/${PHP_FILE}
fi

echo "-----> Writing start.sh script"
mkdir -p ${BUILD_DIR}/bin
cd ${BUILD_DIR}

# Setup
cat >>bin/setup.sh <<EOF
#!/usr/bin/env bash

cp -rf /app/config/* /app

echo "Setting up configuration"
cp /app/vendor/php/php/fpm/status.html /app/public/status.html
cp /app/vendor/php/apc.php /app/public/apc.php
erb /app/vendor/nginx/conf/wordpress.conf.erb > /app/vendor/nginx/conf/wordpress.conf
chmod 755 /app/public/wp-content

# Expose Heroku config vars to PHP-FPM processes
for var in \`env | cut -f1 -d=\`; do
  echo "env[\$var] = \\$\${var}" >> /app/vendor/php/etc/php-fpm.conf
done

mkdir /app/vendor/logs
pushd /app/vendor/logs
touch dp-heroku.log
touch facebook-heroku.log
touch php-heroku.log
touch syilog-heroku.log
touch ee-heroku.log
touch info-heroku.log
touch txn-heroku.log
touch mq-heroku.log
touch unknown-http-env.log
popd
touch /app/vendor/nginx/logs/access.log /app/vendor/nginx/logs/error.log /app/vendor/php/var/log/php-fpm.log
EOF
chmod +x bin/setup.sh

# Cron job
cat >>bin/cron.sh <<EOF
#!/usr/bin/env bash

setup.sh && cd public && php wp-cron.php
EOF
chmod +x bin/cron.sh

# Startup
cat >>bin/start.sh <<EOF
#!/usr/bin/env bash

echo "Starting nginx"
cd /app/bin
/app/bin/setup.sh
(tail -qF -n 0 /app/vendor/nginx/logs/*.log /app/vendor/php/var/log/*.log /app/vendor/logs/*.log &)
php-fpm
nginx
EOF
chmod +x bin/start.sh

echo "-----> Done with compile"
